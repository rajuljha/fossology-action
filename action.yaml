# SPDX-FileCopyrightText: Â© 2024 Rajul Jha <rajuljha49@gmail.com>
#
# SPDX-License-Identifier: GPL-2.0-only

name: "FOSSology Scan"
description: "Run license and copyright scans"
author: "Rajul Jha"
branding:
  icon: "search"
  color: "orange"
inputs:
  # Customizable input variables
  scan_mode:
    description: "Whether to do diff scans or repo scan. Leave blank for diff."
    required: false
    default: ""
  scanners:
    description: "Which scanners to invoke"
    required: false
    default: "nomos ojo copyright keyword"
  report_format:
    description: "Report format to generate reports in: SPDX_JSON, SPDX_YAML, SPDX_RDF, SPDX_TAG_VALUE"
    required: false
    default: ""
# Internal Variables. Not meant to be passed by the user. These are set up by the action itself.
  github_api_url:
    description: "Base URL of Github API"
    required: false
    default: ${{ github.api_url }}
  github_repository:
    description: "Repository name"
    required: false
    default: ${{ github.repository }}
  github_token:
    description: "Github Token"
    required: false
    default: ${{ github.token }}
  github_pull_request:
    description: "Github PR"
    required: false
    default: ${{ github.event.number }}
  github_repo_url:
    description: "Github Repo URL"
    required: false
    default: ${{ github.repositoryUrl }}
  github_repo_owner:
    description: "Github Repo Owner"
    required: false
    default: ${{ github.repository_owner }}

runs:
  using: "composite"
  steps:

    - name: Docker Setup QEMU
      uses: docker/setup-qemu-action@v3.1.0

    - name: Run Fossology scan in Docker
      shell: bash
      run: |
        # Prepare docker run command with arguments
        docker_cmd="docker run --rm --name fossologyscanner -w /opt/repo -v ${PWD}:/opt/repo \
            -e GITHUB_TOKEN=${{ inputs.github_token }} \
            -e GITHUB_PULL_REQUEST=${{ inputs.github_pull_request }} \
            -e GITHUB_REPOSITORY=${{ inputs.github_repository }} \
            -e GITHUB_API=${{ inputs.github_api_url }} \
            -e GITHUB_REPO_URL=${{ inputs.github_repo_url }} \
            -e GITHUB_REPO_OWNER=${{ inputs.github_repo_owner }} \
            -e GITHUB_ACTIONS"

        docker_cmd+=" fossology/fossology:scanner /bin/fossologyscanner"
        docker_cmd+=" ${{ inputs.scanners }}"
        docker_cmd+=" ${{ inputs.scan_mode }}"

        # Add additional conditions
        if [ "${{ inputs.report_format }}" != "" ]; then
        docker_cmd+=" --report ${{ inputs.report_format }}"
        fi

        # Run the command
        echo $docker_cmd
        eval $docker_cmd

    - name: Upload Scan Results Artifact
      if: success() || failure()
      uses: actions/upload-artifact@v3
      with:
        name: Fossology scan results
        path: results/
